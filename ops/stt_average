#!/usr/bin/env python3
# coding=utf8

# Copyright  2021  Jiayu DU

import os
import argparse
import glob

import torch
from pysio.stt import average_model_checkpoints

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-n', '--num_checkpoints', type = int, default = 10)
    parser.add_argument('-i', '--checkpoints_dir', type = str, required = True)
    parser.add_argument('-o', '--averaged', type = str, required = True)
    args = parser.parse_args()

    checkpoints = glob.glob(os.path.join(args.checkpoints_dir, '*.model'))

    def get_epoch(checkpoint):
        # e.g. checkpoint = 'exp/multi_cn/checkpoints/62.model'
        fname, ext = os.path.splitext(os.path.basename(checkpoint))
        assert ext == '.model'
        return int(fname) # 62

    checkpoints.sort(key = get_epoch)
    torch.save(
        average_model_checkpoints(
            checkpoints[-args.num_checkpoints:] # last n checkpoints
        ),
        args.averaged
    )

